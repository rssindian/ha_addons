name: Auto Update Jackett

on:
  schedule:
    - cron: "0 3 * * 6"
  workflow_dispatch:

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        addon: ["vpnjackett"]
        arch: ["amd64", "armv7", "aarch64"]
    permissions:
      contents: read
      packages: write

    steps:
      # Check out the repository
      - name: Checkout Repository
        id: checkout
        uses: actions/checkout@v4.2.2

      # Set up dependencies
      - name: Set Up Tools
        id: tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      # Run the update script (passing the PA_TOKEN as an environment variable)
      - name: Run Update Script
        id: updateVer
        env:
          PA_TOKEN: ${{ secrets.PA_TOKEN }}  # Pass the PA_TOKEN to the script
        run: |
          chmod +x autoupdate_jackett.sh
          ./autoupdate_jackett.sh
          
          # Debug: Print the exit code of the update script
          echo "Exit status of update script: $?"
          
          # Capture the exit code of autoupdate_jackett.sh
          if [[ $? -eq 0 ]]; then
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
          fi
          
      - name: Debug Output
        run: |
          echo "updateVer Status: ${{ steps.updateVer.outputs.status }}"
          
      - name: Get information
        id: info
        if: steps.updateVer.outputs.status == 'success'
        uses: home-assistant/actions/helpers/info@master
        with:
          path: "./${{ matrix.addon }}"

      - name: Check if add-on should be built
        id: check
        if: steps.updateVer.outputs.status == 'success'
        run: |
          if [[ "${{ steps.info.outputs.image }}" == "null" ]]; then
            echo "Image property is not defined, skipping build"
            echo "build_arch=false" >> $GITHUB_OUTPUT;
          elif [[ "${{ steps.info.outputs.architectures }}" =~ ${{ matrix.arch }} ]]; then
            echo "build_arch=true" >> $GITHUB_OUTPUT;
            echo "image=$(echo ${{ steps.info.outputs.image }} | cut -d'/' -f3)" >> $GITHUB_OUTPUT;
          else
            echo "${{ matrix.arch }} is not a valid arch for ${{ matrix.addon }}, skipping build";
            echo "build_arch=false" >> $GITHUB_OUTPUT;
          fi

      - name: Login to GitHub Container Registry
        if: steps.check.outputs.build_arch == 'true'
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ${{ matrix.addon }} add-on
        if: steps.check.outputs.build_arch == 'true'
        uses: home-assistant/builder@2024.08.2
        with:
          args: |
            --${{ matrix.arch }} \
            --target /data/${{ matrix.addon }} \
            --image "${{ steps.check.outputs.image }}" \
            --docker-hub "ghcr.io/${{ github.repository_owner }}" \
            --addon
